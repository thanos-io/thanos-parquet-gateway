# NOTE: Current plan gives 1500 build minutes per month.
version: 2.1

orbs:
  go: circleci/go@1.7.3
  git-shallow-clone: guitarrapc/git-shallow-clone@2.5.0

executors:
  golang:
    docker:
      - image: cimg/go:1.24.0-node
    resource_class: medium

jobs:
  test:
    executor: golang
    steps:
      - git-shallow-clone/checkout
      - go/mod-download-cached
      - run:
          name: Generate protos
          command: make protos
      - run:
          name: Run tests
          command: make test-norace
      - run:
          name: Run lint
          command: make lint
      - store_test_results:
          path: .cover

  # Cross build is needed for publish_release but needs to be done outside of docker.
  cross_build:
    machine: 
      image: ubuntu-2204:2024.01.1
    working_directory: /home/circleci/.go_workspace/src/github.com/thanos-io/thanos-parquet-gateway
    environment:
      GOBIN: "/home/circleci/.go_workspace/go/bin"
      PROMU_VERSION: "0.5.0"
    steps:
      - git-shallow-clone/checkout
      - run:
          name: Install Go
          command: |
            wget https://go.dev/dl/go1.24.0.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.24.0.linux-amd64.tar.gz
            echo 'export PATH=/usr/local/go/bin:$PATH' >> $BASH_ENV
      - run: mkdir -p ${GOBIN}
      - run: curl -L "https://github.com/prometheus/promu/releases/download/v${PROMU_VERSION}/promu-${PROMU_VERSION}.$(go env GOOS)-$(go env GOARCH).tar.gz" | tar --strip-components=1 -xzf - -C ${GOBIN}
      - run: mv -f ${GOBIN}/promu "${GOBIN}/promu-v${PROMU_VERSION}"
      - run: make crossbuild -W ${GOBIN}/promu-v${PROMU_VERSION} # Ignore make dependency, it needs to be enforced somehow.
      - persist_to_workspace:
          root: .
          paths:
            - .build

  publish_main:
    executor: golang
    steps:
      - git-shallow-clone/checkout
      - go/mod-download-cached
      - setup_remote_docker:
          version: docker24
      - attach_workspace:
          at: .
      # Register qemu to support multi-arch.
      - run: docker run --privileged tonistiigi/binfmt:qemu-v6.1.0 --install all
      - run:
          name: Build Docker image
          command: make docker-build
      - run:
          name: Test Docker image
          command: make docker-test
      # Upload to quay.io.
      - run:
          name: Login to Quay.io
          command: echo "${QUAY_PASSWORD}" | docker login -u="${QUAY_USERNAME}" quay.io --password-stdin
      - run:
          name: Push Docker image
          command: make docker-push
      - run:
          name: Create Docker manifest
          command: make docker-manifest

  publish_release:
    executor: golang
    steps:
      - git-shallow-clone/checkout
      - go/mod-download-cached
      - setup_remote_docker:
          version: docker24
      - attach_workspace:
          at: .
      - run:
          name: Create release tarballs
          command: make tarballs-release
      - store_artifacts:
          path: .tarballs
          destination: releases
      # Register qemu to support multi-arch.
      - run: docker run --privileged tonistiigi/binfmt:qemu-v6.1.0 --install all
      - run:
          name: Build Docker image
          command: make docker-build
      - run:
          name: Test Docker image
          command: make docker-test
      # Upload to quay.io.
      - run:
          name: Login to Quay.io
          command: echo "${QUAY_PASSWORD}" | docker login -u="${QUAY_USERNAME}" quay.io --password-stdin
      - run:
          name: Push Docker image with release tag
          command: make docker-push DOCKER_IMAGE_TAG=$CIRCLE_TAG
      - run:
          name: Create Docker manifest for release
          command: make docker-manifest DOCKER_IMAGE_TAG=$CIRCLE_TAG

workflows:
  version: 2
  thanos-parquet-gateway:
    jobs:
      - test
      - publish_main:
          requires:
            - test
          filters:
            branches:
              only: main
      - cross_build:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
            branches:
              ignore: /.*/
      - publish_release:
          requires:
            - cross_build
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
            branches:
              ignore: /.*/
